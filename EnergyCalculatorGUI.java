/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ecotrackapp;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author sohei
 */
public class EnergyCalculatorGUI extends javax.swing.JFrame {

    private ArrayList<Appliances> appliance;
    private double dailyEnergyUsage;
    private double monthlyEnergyUsage;
    private double monthlyCost;
    private double dailyCost;
    private double totalCost;
    private double electricRate;

    /**
     * Creates new form EnergyCalculatorGUI
     */
    public EnergyCalculatorGUI() {
        initComponents();
        appliance = new ArrayList<>();
        dailyEnergyUsage = 0;
        monthlyEnergyUsage = 0;
        monthlyCost = 0;
        dailyCost = 0;
        totalCost = 0;

    }
    EnergyCalculator c = new EnergyCalculator();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    //traverses through the appliance array list and add up all appliances' energy consumption
    public void calculateEnergyUsage() {

        for (int i = 0; i < appliance.size(); i++) {
            //calculate daily energy usage in total and convert to KW
            dailyEnergyUsage += appliance.get(i).getHoursUsed() * appliance.get(i).getPowerRating() / 1000;
        }

        monthlyEnergyUsage = dailyEnergyUsage * 30; //Assuming there is 30 days in a month

    }

    //calculates cost of electrcity using the value of energy used from calculateEnergyUsage method and an electricRate value entered by user
    public void calculateCosts() {
        try {
            if (electricRateTf.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "You have left the electricity rate input field empty!\n Please enter a value.");

            } else {
                calculateEnergyUsage();
                electricRate = Double.parseDouble(electricRateTf.getText());
                monthlyCost = electricRate * monthlyEnergyUsage;
                dailyCost = electricRate * dailyEnergyUsage;
            }
        } catch (Exception e) {
            System.out.println("Error: " + e);

        }
    }

    //print any appliances that we added to the appliance array list
    public void printAppliances() {
        if (appliance.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Sorry, there are no appliances to display.");
        } else {
            for (Appliances a : appliance) {
                JOptionPane.showMessageDialog(null, a.getDetails());
            }
        }
    }

    //delete an appliance using the name of the appliance added before
    private void deleteAppliance() {
        if (appliance.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Sorry, there are no appliances to delete.");
        } else {
            String searchTerm = JOptionPane.showInputDialog(null, "Enter Name of the appliance you want to delete.");
            searchTerm = searchTerm.toLowerCase();
            for (int i = 0; i < appliance.size(); i++) {
                if (appliance.get(i).getName().equalsIgnoreCase(searchTerm)) {
                    appliance.remove(i);
                    JOptionPane.showMessageDialog(null, "Appliance with name " + searchTerm + " has been successfully deleted.");
                }

            }
        }
    }

    //adds an appliance's details to the appliance array list
    public void addAppliance() {
        Appliances a = new Appliances();

        a.setHoursUsed(c.getHoursUsed());
        a.setPowerRating(c.getPowerRating());
        a.setName(c.getName());

        appliance.add(a);
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        powerRateTf = new javax.swing.JTextField();
        hoursUsedLabel = new javax.swing.JLabel();
        hoursUsedTf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        addApplicationBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        homeSectionBtn = new javax.swing.JButton();
        surveySectionBtn = new javax.swing.JButton();
        appNameTf = new javax.swing.JTextField();
        calculatorSectionBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        calculateCostsBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        electricRateLbl = new javax.swing.JLabel();
        electricRateTf = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ecotrackIconLbl = new javax.swing.JLabel();
        displayAppsBtn = new javax.swing.JButton();
        displayEnergyBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        userHelpBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EcoTrack");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        powerRateTf.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 0), 3, true));
        powerRateTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerRateTfActionPerformed(evt);
            }
        });

        hoursUsedLabel.setBackground(new java.awt.Color(255, 255, 255));
        hoursUsedLabel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        hoursUsedLabel.setText("Hours Used Daily: (An estimate)");
        hoursUsedLabel.setOpaque(true);

        hoursUsedTf.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 0), 3, true));
        hoursUsedTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hoursUsedTfActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("EcoTrack Energy Usage Calculator");
        jLabel4.setOpaque(true);

        addApplicationBtn.setBackground(new java.awt.Color(153, 255, 153));
        addApplicationBtn.setText("Add Application");
        addApplicationBtn.setOpaque(true);
        addApplicationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addApplicationBtnActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Household Appliance Name:");
        jLabel2.setOpaque(true);

        homeSectionBtn.setBackground(new java.awt.Color(102, 255, 102));
        homeSectionBtn.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        homeSectionBtn.setText("HOME");
        homeSectionBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));
        homeSectionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeSectionBtnActionPerformed(evt);
            }
        });

        surveySectionBtn.setBackground(new java.awt.Color(102, 255, 102));
        surveySectionBtn.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        surveySectionBtn.setText("SURVEY");
        surveySectionBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));
        surveySectionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surveySectionBtnActionPerformed(evt);
            }
        });

        appNameTf.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 0), 3, true));
        appNameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appNameTfActionPerformed(evt);
            }
        });

        calculatorSectionBtn.setBackground(new java.awt.Color(102, 255, 102));
        calculatorSectionBtn.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        calculatorSectionBtn.setText("ENERGY CONSUMPTION CALCULATOR");
        calculatorSectionBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));
        calculatorSectionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculatorSectionBtnActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Power Rating of the Household Appliance(W-watts):");
        jLabel3.setOpaque(true);

        calculateCostsBtn.setBackground(new java.awt.Color(204, 255, 204));
        calculateCostsBtn.setText("Calculate ");
        calculateCostsBtn.setEnabled(false);
        calculateCostsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateCostsBtnActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("After you have added all appliances you use\nand  are happy with your entries, please \nenter the rate at which you are charged for\nyou electricity and click calculate. If you do \nnot know the exact rate enter an estimate.");
        jTextArea1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153), null, null));
        jScrollPane1.setViewportView(jTextArea1);

        electricRateLbl.setBackground(new java.awt.Color(255, 255, 255));
        electricRateLbl.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        electricRateLbl.setText("Electricity Rate:(Euro/KWh)");
        electricRateLbl.setOpaque(true);

        electricRateTf.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 0), 3, true));
        electricRateTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                electricRateTfActionPerformed(evt);
            }
        });

        ecotrackIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ecotrackapp/EcoTrackIcon2.png"))); // NOI18N

        displayAppsBtn.setBackground(new java.awt.Color(153, 255, 153));
        displayAppsBtn.setText("Display Appliances Entered");
        displayAppsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAppsBtnActionPerformed(evt);
            }
        });

        displayEnergyBtn.setBackground(new java.awt.Color(204, 255, 204));
        displayEnergyBtn.setText("Display Energy Consumption");
        displayEnergyBtn.setOpaque(true);
        displayEnergyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayEnergyBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(255, 153, 153));
        deleteBtn.setText("Delete Appliance");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        userHelpBtn.setBackground(new java.awt.Color(255, 255, 204));
        userHelpBtn.setText("How to Use the Calculator?");
        userHelpBtn.setOpaque(true);
        userHelpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userHelpBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(ecotrackIconLbl)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addApplicationBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayAppsBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(electricRateTf, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(electricRateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(calculateCostsBtn)))
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addComponent(powerRateTf, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(appNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(hoursUsedTf, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hoursUsedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(540, 540, 540))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(userHelpBtn)
                        .addGap(64, 64, 64)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(homeSectionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calculatorSectionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(surveySectionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(deleteBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(displayEnergyBtn)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(calculatorSectionBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(homeSectionBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(surveySectionBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ecotrackIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userHelpBtn)
                            .addComponent(jLabel4))
                        .addGap(31, 31, 31)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(electricRateLbl)
                        .addGap(18, 18, 18)
                        .addComponent(electricRateTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(calculateCostsBtn)
                        .addGap(75, 75, 75))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(appNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(powerRateTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hoursUsedLabel)
                        .addGap(18, 18, 18)
                        .addComponent(hoursUsedTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addApplicationBtn)
                            .addComponent(displayAppsBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayEnergyBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteBtn)
                        .addGap(11, 11, 11))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void addApplicationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addApplicationBtnActionPerformed
        // TODO add your handling code here:

        try {
            c.setHoursUsed(Double.parseDouble(hoursUsedTf.getText()));
            c.setPowerRating(Double.parseDouble(powerRateTf.getText()));
            c.setName(appNameTf.getText());

            appNameTf.setText(" ");
            powerRateTf.setText(" ");
            hoursUsedTf.setText(" ");

            calculateCostsBtn.setEnabled(true);

            addAppliance();
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }//GEN-LAST:event_addApplicationBtnActionPerformed

    private void hoursUsedTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hoursUsedTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hoursUsedTfActionPerformed

    private void powerRateTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerRateTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_powerRateTfActionPerformed

    private void calculatorSectionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculatorSectionBtnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_calculatorSectionBtnActionPerformed

    private void appNameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appNameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_appNameTfActionPerformed

    private void surveySectionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_surveySectionBtnActionPerformed
        // TODO add your handling code here:
        ThisSurveyGUI surveyGUI = new ThisSurveyGUI();
        surveyGUI.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_surveySectionBtnActionPerformed

    private void homeSectionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeSectionBtnActionPerformed
        // TODO add your handling code here:
        HomeGUI homeGUI = new HomeGUI();
        homeGUI.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_homeSectionBtnActionPerformed

    private void calculateCostsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateCostsBtnActionPerformed
        // TODO add your handling code here:

        calculateCosts();
        JOptionPane.showMessageDialog(null, "Your Daily Energy Costs: " + dailyCost + "Euro" + "\nYour Monthly Energy Costs: " + monthlyCost + " Euro");
        dailyCost = 0;
        monthlyCost = 0;
        electricRate = 0;
        monthlyEnergyUsage = 0;
        dailyEnergyUsage = 0;
    }//GEN-LAST:event_calculateCostsBtnActionPerformed

    private void electricRateTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_electricRateTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_electricRateTfActionPerformed

    private void displayAppsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAppsBtnActionPerformed
        // TODO add your handling code here:
        printAppliances();
    }//GEN-LAST:event_displayAppsBtnActionPerformed

    private void displayEnergyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayEnergyBtnActionPerformed
        // TODO add your handling code here:
        calculateEnergyUsage();
        JOptionPane.showMessageDialog(null, "Your daily energy consumption: " + dailyEnergyUsage + " KW." + "\nYour monthly energy consumption: " + monthlyEnergyUsage + " KW");
        dailyEnergyUsage = 0;
        monthlyEnergyUsage = 0;
    }//GEN-LAST:event_displayEnergyBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        deleteAppliance();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void userHelpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userHelpBtnActionPerformed
        // TODO add your handling code here:
        UserGuideGUI myGuide = new UserGuideGUI();

        myGuide.setVisible(true);
    }//GEN-LAST:event_userHelpBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnergyCalculatorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addApplicationBtn;
    private javax.swing.JTextField appNameTf;
    private javax.swing.JButton calculateCostsBtn;
    private javax.swing.JButton calculatorSectionBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton displayAppsBtn;
    private javax.swing.JButton displayEnergyBtn;
    private javax.swing.JLabel ecotrackIconLbl;
    private javax.swing.JLabel electricRateLbl;
    private javax.swing.JTextField electricRateTf;
    private javax.swing.JButton homeSectionBtn;
    private javax.swing.JLabel hoursUsedLabel;
    private javax.swing.JTextField hoursUsedTf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField powerRateTf;
    private javax.swing.JButton surveySectionBtn;
    private javax.swing.JButton userHelpBtn;
    // End of variables declaration//GEN-END:variables
}
